<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on Chunyou Peng Blog</title>
    <link>http://example.org/tags/math/</link>
    <description>Recent content in Math on Chunyou Peng Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://example.org/tags/math/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is Math?</title>
      <link>http://example.org/posts/whats-math/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/whats-math/</guid>
      <description>What is math? Math runs on definitions.&#xA;Math is a way to research a object&amp;rsquo;s different aspects. For a car, if you want to count the number, it is one. if you want to know how many wheels it has, it is four. So in the same object, you will get different &amp;ldquo;math&amp;rdquo;.&#xA;Definition is to give something a name. it is the first layer of [[https://chunyoupeng.github.io/posts/abstraction/][abstract]]. Once you have the name, you can build things at a higer level.</description>
    </item>
    <item>
      <title>Pigeonhole Principle from Proofs</title>
      <link>http://example.org/posts/pigeonhole-principle/</link>
      <pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/pigeonhole-principle/</guid>
      <description>Pigeonhole Principle from Proofs General Form Consider placing kn + m objects (where 0 &amp;lt; m ≤ n) into n boxes. The Pigeonhole Principle states that at least one box will contain k + 1 objects.&#xA;Explanation Think of the pigeons as individuals and the pigeonholes as distinct properties or labels. By assigning these individuals to specific properties, we can abstractly demonstrate the principle&amp;rsquo;s applicability.</description>
    </item>
    <item>
      <title>My Master Theorem Understanding</title>
      <link>http://example.org/posts/master-theorem/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/master-theorem/</guid>
      <description>Book Screenshot My Quick Understanding 就是比较f(n)和$n^{\log{b^a}}$&#xA;f(n)的阶数要小一点,T(n)=O($n^{\log{b^a}}$) 相同,则是乘以一个log f(n)的阶数要大一点,要判断一个af(n/b) &amp;lt;= cf(n),c&amp;lt;1.如果满足,T(n)=O(f(n)) 其实就是以大的为主</description>
    </item>
  </channel>
</rss>
