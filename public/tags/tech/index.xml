<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Chunyou Peng Blog</title>
    <link>http://example.org/tags/tech/</link>
    <description>Recent content in Tech on Chunyou Peng Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 18 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://example.org/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build Abstraction</title>
      <link>http://example.org/posts/abstraction/</link>
      <pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/abstraction/</guid>
      <description>What is Abstraction? Abstraction is a process by which general rules and concepts are derived from the usage and classification of specific examples, literal (real or concrete) signifiers, first principles, or other methods.&#xA;Definition from Wikipedia&#xA;Abstraction in Mathematics I once dwelled on a problem repeatedly, a problem that had been considered many times before. I&amp;rsquo;ve come to realize that such rumination is unproductive. This revelation came when I acknowledged my struggle with the skill of abstraction.</description>
    </item>
    <item>
      <title>My Personal TODO App</title>
      <link>http://example.org/posts/todo-app/</link>
      <pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/todo-app/</guid>
      <description>TODO-APP 需求 软件思路 这个app用来管理用户的todo事项。&#xA;用户可以添加，修改，删除事项。每个事项有一个优先级，1－5星。优先级最高的排在最前面。用户点击事项前面的已完成按扭之后，就会被移到已完成的一个箱子里面。用户可以选择点击这个箱子查看。&#xA;前端 前端使用vite 创建react项目.使用ts.css使用tailwincss&#xA;按扭有添加,删除,已完成,设定优先级(1-5).完成箱(用来查看已完成的事项) 并且显示添加的日期&#xA;后端 数据库使用postgresql&#xA;内容有 完成情况(已完成/未完成) | 事件 | 优先级 | 添加的日期</description>
    </item>
    <item>
      <title>Personal Wrods DB App</title>
      <link>http://example.org/posts/words-db/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/words-db/</guid>
      <description>Personal Wrods DB App 需求 软件思路 这个软件的目的是记录和跟踪用户的词汇情况.&#xA;用户在日常的生活中,可能会遇到一些生词,这个时候就可以把这个单词录入到系统里面.系统首先在数据库里查询这个单词.如果有,则返回查询这个单词的次数和意思.如果没有,则使用一个函数 GetMeaning(word){return word + &amp;ldquo;meaning is&amp;rdquo;;}, 目前就一个定死的函数.返回他的意思,查询次数设为1.&#xA;系统的第二个功能是:用户在读一篇文本的时候,想知道哪些单词不认识.他可以把这篇文章复制到另一个查询框.系统通过查找每一个单词, 如果不在数库里面,系统一行一行输出这些单词的原单词,查询次数,单词意思.&#xA;前端 使用reactjs.有两个选项, 一个是录单词的.另一个就是录文本的.&#xA;下面都有对应的按纽,点击就调用具体的功能.&#xA;后端 数据库使用postgresql.&#xA;内容有 单词 | 查询次数 | 单词意思</description>
    </item>
    <item>
      <title>System of systems Technology Integration Tool Chain for Heterogeneous Electronic System</title>
      <link>http://example.org/posts/stitches/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/stitches/</guid>
      <description>背景 美国国防部(DoD)在过去有大量的不同数据标准、协议的系统。STITCHES就是为了实现系统在不需要共享公共标准的情况下实现实现互操作的一个系统.而子系统可以根据自已的需求独立开发而不受影响.&#xA;节点的传输 Transforms Expressed in a Domain Specific Language Built for this Purpose&#xA;点节的数据的传输是由定义在它上面的DSL进行的.&#xA;结构图 中间有一部是把配置文件转换成C++/Java代码,这一步就有我们做的非常相似.&#xA;DSL 提供高层的函数, 嵌套的表达式, 语法糖 提供了类型系统 辑写人可以直接读的语言 Config file 把上面的配置文件转换成对应的代码.</description>
    </item>
    <item>
      <title>Docker Proxy Settings</title>
      <link>http://example.org/posts/docker-proxy/</link>
      <pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://example.org/posts/docker-proxy/</guid>
      <description>Docker Proxy Docker build docker build --no-cache -t test:latest . \ --network host \ --build-arg HTTP_PROXY=http://127.0.0.1:7890 \ --build-arg HTTPS_PROXY=http://127.0.0.1:7890 Note I add &amp;ndash;no-cache flag</description>
    </item>
  </channel>
</rss>
